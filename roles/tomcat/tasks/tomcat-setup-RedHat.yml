---
- name: Unpack archive
  command: "tar -zxf {{java_archive}} -C {{java_archive_location}} creates={{java_name}}"

- name: Fix ownershipyml
  file: state=directory path={{java_name}} owner=root group=root recurse=yes

- name: Make Java available for system
  command: 'alternatives --install "/usr/bin/java" "java" "{{java_name}}/bin/java" 2000'

############################################################################################################################################
- name: Add tomcat group
  group:
    name: tomcat

- name: Add "tomcat" user
  user:
    name: tomcat
    group: tomcat
    home: /usr/share/tomcat
    createhome: no
    system: yes

- name: Add web to tomcat group
  user:
    name: web
    groups: tomcat,web
    append: yes

- name: Create a tomcat directory
  file:
    path: /usr/share/tomcat
    state: directory
    owner: tomcat
    group: tomcat

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: /usr/share/tomcat
    owner: tomcat
    group: tomcat
    remote_src: yes
    extra_opts: "--strip-components=1"
    creates: /usr/share/tomcat/bin

- name: Copy tomcat service file
  template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_service_mgr == "systemd"

- name: Start and enable tomcat
  service:
    daemon_reload: yes
    name: tomcat
    state: started
    enabled: yes
  when: ansible_service_mgr == "systemd"

- name: Start and enable firewalld
  service:
    name: firewalld
    state: started
    enabled: yes
  when: ansible_service_mgr == "systemd"

- name: Open tomcat port on the firewall
  firewalld:
    port: 9090/tcp
    permanent: true
    state: enabled
    immediate: yes
  when: ansible_service_mgr == "systemd"
- name: change port to 9090
  ansible.builtin.replace:
    path: /usr/share/tomcat/conf/server.xml
    regexp: '<Connector port="8080"'
    replace: '<Connector port="9090"'
  notify: restart tomcat
  
- name: Set UI access credentials
  template:
    src: tomcat-users.xml.j2
    dest: /usr/share/tomcat/conf/tomcat-users.xml
  notify: restart tomcat

- name: Allow access to Manager and Host Manager apps from any IP
  template:
    src: context.xml.j2 
    dest: "{{ item }}"
  with_items:
    - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
    - /usr/share/tomcat/webapps/manager/META-INF/context.xml
  notify: restart tomcat
- name : copy war file to deploy
  copy:
    src: /var/lib/jenkins/workspace/final/target/spring-petclinic-2.4.5.war
    dest: /usr/share/tomcat/webapps/
    force: yes